name: Build and SonarQube Scan

permissions:
  contents: read
  security-events: write
  issues: write # Required for creating issues

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better relevancy of analysis

      # Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      # Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"

      # Get dependencies, generate coverage, and build the APK
      - name: Build and Generate Coverage
        run: |
          flutter pub get
          flutter test --coverage # Generate coverage report
          flutter build apk --release

      # Run SonarQube scan
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io # Use SonarCloud URL
        with:
          args: >
            -Dsonar.projectKey=booktrail # Replace with your actual project key
            -Dsonar.organization=mohamed-ahmad2 # Your organization key
            -Dsonar.sources=.
            -Dsonar.dart.coverage.reportPaths=coverage/lcov.info
            -Dsonar.scm.provider=git
            -Dsonar.scm.revision=${{ github.sha }}
            -Dsonar.branch.name=${{ github.ref_name }} # Ensure correct branch detection

      # Check Quality Gate
      - name: SonarQube Quality Gate Check
        uses: SonarSource/sonarqube-quality-gate-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

      # Create GitHub Issue if Quality Gate fails
      - name: Create GitHub Issue on Quality Gate Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'SonarQube Quality Gate Failed',
              body: 'The SonarQube Quality Gate failed. Check the analysis results for details: https://sonarcloud.io/dashboard?id=booktrail',
            });
            console.log(`Created issue #${issue.data.number}`);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload SARIF report for code scanning alerts
      - name: Export and Upload SonarQube SARIF Report
        if: always()
        run: |
          curl -u ${{ secrets.SONAR_TOKEN }}: -o sonar-report.sarif "https://sonarcloud.io/api/issues/search?projectKeys=booktrail&format=sarif"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sonar-report.sarif