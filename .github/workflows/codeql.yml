name: "CodeQL Analysis"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0' # Runs every week

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['cpp', 'swift']
        os: [ubuntu-latest, macos-latest]
        include:
          - language: cpp
            os: ubuntu-latest
          - language: swift
            os: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Install dependencies for C++ (Linux)
        if: matrix.language == 'cpp'
        run: |
          # Install necessary tools for compiling C++ (e.g., CMake and g++)
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Build C++ (Linux)
        if: matrix.language == 'cpp'
        run: |
          # Ensure the directory contains C++ files (e.g., CMakeLists.txt)
          # Replace 'linux' with the actual directory of your C++ code
          if [ -d "linux" ]; then
            cd linux
            mkdir -p build && cd build
            cmake ..
            make
          else
            echo "Directory 'linux' not found. Check the path of your C++ code."
            exit 1
          fi
          # If you use other commands (e.g., g++ directly), replace the above commands. Example:
          # g++ -o output source.cpp

      - name: Select Xcode version (macOS)
        if: matrix.language == 'swift'
        run: |
          # Specify Xcode version to ensure compatibility
          sudo xcode-select -s /Applications/Xcode_15.4.app || echo "Xcode version not available, default will be used"

      - name: Build Swift (macOS)
        if: matrix.language == 'swift'
        run: |
          # Ensure the 'macos' directory contains Runner.xcworkspace
          if [ -d "macos" ]; then
            cd macos
            xcodebuild clean build -workspace Runner.xcworkspace -scheme Runner -configuration Debug CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          else
            echo "Directory 'macos' not found. Check the path of your Xcode project."
            exit 1
          fi
          # If the scheme (-scheme) or workspace (-workspace) name is different, modify it here

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3